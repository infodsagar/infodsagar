function checkCashRegister(price, cash, cid) {
  //Currency/count/value/left
  let currency = [
  ['PENNY',cid[0][1]*100/1,0.01,0],
  ['NICKEL',Math.ceil(cid[1][1]/0.05),0.05,0],
  ['DIME',Math.ceil(cid[2][1]/0.10),0.10,0],
  ['QUARTER',Math.ceil(cid[3][1]/0.25),0.25,0],
  ['ONE',Math.ceil(cid[4][1]/1),1,0],
  ['FIVE',Math.ceil(cid[5][1]/5),5,0],
  ['TEN',Math.ceil(cid[6][1]/10),10,0],
  ['TWENTY',Math.ceil(cid[7][1]/20),20,0],
  ['ONE HUNDRED',Math.ceil(cid[8][1]/100,0),100,0]
  ];
  let change = (cash - price).toFixed(2);

 //console.log(change);
 //console.log(currency);


for(let i = 0; change > 0; i++){
if(change > 0){
if(change >= currency[8][2] && currency[8][1] > 0) {
change = change - currency[8][2];
currency[8][1] = currency[8][1] - 1;
currency[8][3] = currency[8][3] + 1;
}
else if(change >= currency[7][2] && currency[7][1] > 0){
change = change - currency[7][2];
currency[7][1] = currency[7][1] - 1;
currency[7][3] = currency[7][3] + 1;
}
else if (change >= currency[6][2] && currency[6][1] > 0){
change = change - currency[6][2];
currency[6][1] = currency[6][1] - 1;
currency[6][3] = currency[6][3] + 1;
}
else if (change >= currency[5][2] && currency[5][1] > 0){
change = change - currency[5][2];
currency[5][1] = currency[5][1] - 1;
currency[5][3] = currency[5][3] + 1;
}
else if (change >= currency[4][2] && currency[4][1] > 0){
change = change - currency[4][2];
currency[4][1] = currency[4][1] - 1;
currency[4][3] = currency[4][3] + 1;
}
else if (change >= currency[3][2] && currency[3][1] > 0){
change = change - currency[3][2];
currency[3][1] = currency[3][1] - 1;
currency[3][3] = currency[3][3] + 1;
}
else if (change >= currency[2][2] && currency[2][1] > 0){
change = change - currency[2][2];
currency[2][1] = currency[2][1] - 1;
currency[2][3] = currency[2][3] + 1;
}
else if (change >= currency[1][2] && currency[1][1] > 0){
change = change - currency[1][2];
currency[1][1] = currency[1][1] - 1;
currency[1][3] = currency[1][3] + 1;
}
else if (change >= currency[0][2] && currency[0][1] > 0){
change = (change - currency[0][2]).toFixed(2);
currency[0][1] = currency[0][1] - 1;
currency[0][3] = currency[0][3] + 1;
}
}
}

let tillCount = [];
tillCount = currency[0][1]*currency[0][2];
console.log(tillCount);

let counter = [
  ['PENNY',currency[0][2]*currency[0][3]],
  ['NICKEL',currency[1][2]*currency[1][3]],
  ['DIME',currency[2][2]*currency[2][3]],
  ['QUARTER',currency[3][2]*currency[3][3]],
  ['ONE',currency[4][2]*currency[4][3]],
  ['FIVE',currency[5][2]*currency[5][3]],
  ['TEN',currency[6][2]*currency[6][3]],
  ['TWENTY',currency[7][2]*currency[7][3]],
  ['ONE HUNDRED',currency[8][2]*currency[8][3]]
  ];

  //console.log(counter);
  console.log(change);
  //console.log(currency);

let newArray = [];
for(let i = 0; i < counter.length; i++){
  if(counter[i][1] > 0){
    newArray.unshift(counter[i]);
  }
}
  

let resultOpen = {
  status: 'OPEN',
  change: newArray
};

let resultInsu = {
  status : 'INSUFFICIENT_FUNDS',
change: []
}

if(change = 0){
//return resultOpen;
} else {
  //return resultInsu;
}
//console.log(result);
//console.log(counter2);
//console.log(currency);
}


checkCashRegister(19.6, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]);
